// <auto-generated />
using Bank.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank.API.Migrations
{
    [DbContext(typeof(AccountInfoContext))]
    [Migration("20230112122455_AccountInfoDBInitialMigration")]
    partial class AccountInfoDBInitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bank.API.Repository.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Sum")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Owner = "Gabor Andreea",
                            Sum = 2500f
                        },
                        new
                        {
                            Id = 2,
                            Owner = "Pavel Carmen",
                            Sum = 3200f
                        },
                        new
                        {
                            Id = 3,
                            Owner = "Wolf Lorena",
                            Sum = 2800f
                        });
                });

            modelBuilder.Entity("Bank.API.Repository.Entities.Deposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<float>("DepositSum")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Deposits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            DepositSum = 2000f,
                            Name = "Savings Deposit",
                            Period = 1
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            DepositSum = 500f,
                            Name = "Fixed Deposit",
                            Period = 12
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 2,
                            DepositSum = 2200f,
                            Name = "Fixed Deposit",
                            Period = 6
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 2,
                            DepositSum = 1000f,
                            Name = "Recurring Deposit",
                            Period = 1
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 3,
                            DepositSum = 1200f,
                            Name = "Savings Deposit",
                            Period = 12
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 3,
                            DepositSum = 1600f,
                            Name = "Current Deposit",
                            Period = 6
                        });
                });

            modelBuilder.Entity("Bank.API.Repository.Entities.Deposit", b =>
                {
                    b.HasOne("Bank.API.Repository.Entities.Account", "Account")
                        .WithMany("Deposits")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Bank.API.Repository.Entities.Account", b =>
                {
                    b.Navigation("Deposits");
                });
#pragma warning restore 612, 618
        }
    }
}
